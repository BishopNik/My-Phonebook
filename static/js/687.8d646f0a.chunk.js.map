{"version":3,"file":"static/js/687.8d646f0a.chunk.js","mappings":"kXA6FA,SAASA,EAAUC,GAClB,OACCC,EAAAA,EAAAA,MAACC,EAAAA,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,UAAaN,GAAK,IAAAO,SAAA,CACzE,mBACDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACJ,MAAM,UAAUK,KAAK,iBAAgBH,SAAC,iBAEpC,KACP,IAAII,MAAOC,cACX,OAGJ,CAEA,IAAMC,GAAeC,EAAAA,EAAAA,KA0FrB,EAxFkB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAuBR,OACCT,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAACC,MAAOP,EAAaN,UAClCN,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIhB,SAAA,EACxCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAW,KACZvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CACHC,GAAI,CACHC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACXvB,SAAA,EAEFC,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmB1B,UAC/CC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAgB,OAElB1B,EAAAA,EAAAA,KAACN,EAAAA,EAAU,CAACoB,UAAU,KAAKlB,QAAQ,KAAIG,SAAC,aAGxCN,EAAAA,EAAAA,MAACwB,EAAAA,EAAG,CAACH,UAAU,OAAOa,SA3BL,SAAAC,GACpBA,EAAMC,iBACN,IAdkBC,EAcZC,EAAO,IAAIC,SAASJ,EAAMK,gBAddH,EAeP,CACVI,MAAOH,EAAKI,IAAI,SAChBC,SAAUL,EAAKI,IAAI,cAhBRD,OAAUJ,EAAOM,SAI7B7B,GACC8B,EAAAA,EAAAA,IAAM,CACLH,MAAOJ,EAAOI,MACdE,SAAUN,EAAOM,aANlBE,EAAAA,EAAAA,IAAY,6BAiBd,EAoBkDC,YAAU,EAACrB,GAAI,CAAEsB,GAAI,GAAIzC,SAAA,EACtEC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACTC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEVjD,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACTC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAEdhD,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,CACNC,SAAU3C,EACVyC,KAAK,SACLN,WAAS,EACThD,QAAQ,YACRsB,GAAI,CAAEsB,GAAI,EAAGa,GAAI,GAAItD,SACrB,aAGDC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,WAAS,EAAAxD,UACdC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACE,MAAI,EAAAzD,UACTC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAK,WAAWN,QAAQ,QAAOG,SACnC,8CAMNC,EAAAA,EAAAA,KAACT,EAAS,CAAC2B,GAAI,CAAEsB,GAAI,EAAGa,GAAI,SAIhC,ECrLA,EARc,WACb,OACCrD,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CAAAd,UACTC,EAAAA,EAAAA,KAACyD,EAAS,KAGb,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["/** @format */\n\n// import React, { useRef } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { Field, reduxForm } from 'redux-form';\n// import { toastWindow } from 'components/Helpers';\n// import { logIn } from 'redux/auth/operations';\n\n// import { required, maxLength15, minLength7, email, renderField } from 'styled/loginFieldCheck';\n// import { FormBox, ButtonBox, Button } from 'styled/shared.styled';\n\n// const LoginForm = ({ handleSubmit, pristine, reset, submitting }) => {\n// \tconst dispatch = useDispatch();\n// \tconst cancelLogin = useRef(null);\n\n// \tconst submitForm = values => {\n// \t\tif (!values.email || !values.password) {\n//          toastWindow('Please fill out all fields');\n// \t\t\treturn;\n// \t\t}\n// \t\tcancelLogin.current = dispatch(\n// \t\t\tlogIn({\n// \t\t\t\temail: values.email,\n// \t\t\t\tpassword: values.password,\n// \t\t\t})\n// \t\t);\n\n// \t\t// reset();\n// \t};\n\n// \treturn (\n// \t\t<FormBox\n// \t\t\tonSubmit={e => {\n// \t\t\t\te.preventDefault();\n// \t\t\t\thandleSubmit(submitForm)(e);\n// \t\t\t}}\n// \t\t>\n// \t\t\t<Field\n// \t\t\t\tname='email'\n// \t\t\t\ttype='email'\n// \t\t\t\tcomponent={renderField}\n// \t\t\t\tlabel='Login'\n// \t\t\t\tplaceholder='Enter email'\n// \t\t\t\tvalidate={[required, email]}\n// \t\t\t/>\n// \t\t\t<Field\n// \t\t\t\tname='password'\n// \t\t\t\ttype='password'\n// \t\t\t\tcomponent={renderField}\n// \t\t\t\tlabel='Password'\n// \t\t\t\tplaceholder='Enter password'\n// \t\t\t\tvalidate={[required, maxLength15, minLength7]}\n// \t\t\t/>\n// \t\t\t<ButtonBox>\n// \t\t\t\t<Button type='submit' disabled={pristine || submitting}>\n// \t\t\t\t\tLog in\n// \t\t\t\t</Button>\n// \t\t\t\t<Button\n// \t\t\t\t\ttype='button'\n// \t\t\t\t\tdisabled={pristine || cancelLogin.current === null}\n// \t\t\t\t\tonClick={() => cancelLogin.current?.abort()}\n// \t\t\t\t>\n// \t\t\t\t\t‚ùå\n// \t\t\t\t</Button>\n// \t\t\t\t<Button type='button' disabled={pristine || submitting} onClick={reset}>\n// \t\t\t\t\tüóëÔ∏è\n// \t\t\t\t</Button>\n// \t\t\t</ButtonBox>\n// \t\t</FormBox>\n// \t);\n// };\n\n// export default reduxForm({\n// \tform: 'login',\n// })(LoginForm);\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { logIn } from 'redux/auth/operations';\nimport { toastWindow } from 'components/Helpers';\nimport { useAuth } from 'hooks';\n\nfunction Copyright(props) {\n\treturn (\n\t\t<Typography variant='body2' color='text.secondary' align='center' {...props}>\n\t\t\t{'Copyright ¬© '}\n\t\t\t<Link color='inherit' href='/my-phonebook/'>\n\t\t\t\tMy Phonebook\n\t\t\t</Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\nconst defaultTheme = createTheme();\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\tconst { isLogging } = useAuth();\n\n\tconst submitForm = values => {\n\t\tif (!values.email || !values.password) {\n\t\t\ttoastWindow('Please fill out all fields');\n\t\t\treturn;\n\t\t}\n\t\tdispatch(\n\t\t\tlogIn({\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password,\n\t\t\t})\n\t\t);\n\t};\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconst data = new FormData(event.currentTarget);\n\t\tsubmitForm({\n\t\t\temail: data.get('email'),\n\t\t\tpassword: data.get('password'),\n\t\t});\n\t};\n\n\treturn (\n\t\t<ThemeProvider theme={defaultTheme}>\n\t\t\t<Container component='main' maxWidth='xs'>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmarginTop: 8,\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box component='form' onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tautoComplete='email'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={isLogging}\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Link href='register' variant='body2'>\n\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Copyright sx={{ mt: 8, mb: 4 }} />\n\t\t\t</Container>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default LoginForm;\n","/** @format */\n\nimport { Container } from 'styled/shared.styled';\nimport LoginForm from 'components/LoginForm';\n\nconst Login = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<LoginForm />\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n"],"names":["Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","dispatch","useDispatch","isLogging","useAuth","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","event","preventDefault","values","data","FormData","currentTarget","email","get","password","logIn","toastWindow","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","disabled","mb","Grid","container","item","LoginForm"],"sourceRoot":""}